apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.mvvm.room.myjsonapp"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def material_version = "1.1.0"
    // - - Material Design
    implementation "com.google.android.material:material:$material_version"

    def kotlin_core = "1.3.0"
    // - - Kotlin Core
    implementation "androidx.core:core-ktx:$kotlin_core"

    def lifecycle_version = "2.2.0"
    // - - ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    def retrofit_version = "2.9.0"
    def logging_version = "4.7.2"
    // - - Retrofit & OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$logging_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"

    def glide_version = "4.11.0"
    // - - Glide
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glide_version") {
        exclude group: 'glide-parent'
    }

    def swipe_version = "1.1.0"
    // - - Swipe To Refresh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_version"

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation "org.mockito:mockito-inline:2.24.5"
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'

    //testing libraries
    def junit_x_ext = '1.1.1'
    def android_arch_core_testing = '1.1.1'
    def mockk_version = '1.9.3'
    def testx_rules = '1.3.0-alpha02'

    testImplementation "androidx.test.ext:junit:$junit_x_ext"
    testImplementation "android.arch.core:core-testing:$android_arch_core_testing"
    testImplementation "io.mockk:mockk:$mockk_version"

    androidTestImplementation "androidx.test.ext:junit:$junit_x_ext"
    androidTestImplementation "androidx.test:rules:$testx_rules"
}